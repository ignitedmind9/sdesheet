/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/
#include<bits/stdc++.h>
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    vector<int> res;
    if(root==NULL)
        return res;
    queue<pair<TreeNode<int> *,pair<int,int>>> q;
    map<int, vector<int>> m;
    q.push({root,{0,0}});
    while(!q.empty())
    {
        TreeNode<int> *node = q.front().first;
        int level = q.front().second.first;
        int hor = q.front().second.second;
        q.pop();
        m[hor].push_back(node->data);
        if(node->left)
            q.push({node->left,{level+1, hor-1}});
        if(node->right)
            q.push({node->right,{level+1, hor+1}});
    }
    for(auto it: m)
    {
        res.insert(res.end(), it.second.begin(), it.second.end());
    }
    return res;
}






