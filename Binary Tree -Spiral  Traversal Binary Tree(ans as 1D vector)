/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> res;
    if(root==NULL)
        return res;
    queue<BinaryTreeNode<int> *> q;
    q.push(root);
    int lefttoright = true;
    while(!q.empty())
    {
        BinaryTreeNode<int> *node;
        int size = q.size();
        vector<int> ans(size);
        for(int i=0;i<size;i++)
        {
            node = q.front();
            q.pop();
            int index = (lefttoright? i:size-i-1);
            ans[index] = node->data;
            if(node->left)
                q.push(node->left);
            if(node->right)
                q.push(node->right);
        }
        res.insert(res.end(), ans.begin(), ans.end());
        lefttoright = !lefttoright;
    }
    return res;
    
}










