long long int findMax(vector<int>& arr)
{
    int n= arr.size();
    vector<long long int> dp(n, 0);
    long long int prev= arr[0];
    long long int prev2 = 0;
    for(int i=1;i<n;i++)
    {
        long long int pick = arr[i];
        if(i>1)
            pick+=prev2;
        long long int notPick = 0+prev;
        
        long long int curi = max(pick, notPick);
        prev2=prev;
        prev=curi;
    }
    return prev;
}

long long int houseRobber(vector<int>& arr)
{
    int n = arr.size();
    if(n==1)
        return arr[0];
    vector<int> temp1, temp2;
    for(int i=0;i<n;i++)
    {
        if(i!=0)
            temp1.push_back(arr[i]);
        if(i!=n-1)
            temp2.push_back(arr[i]);
    }
    return max(findMax(temp1),findMax(temp2));
}
