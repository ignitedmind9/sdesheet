/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
#include<bits/stdc++.h>
vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> result;
    if(root==NULL)
        return result;
    stack<BinaryTreeNode<int> *> q1;
    stack<BinaryTreeNode<int> *> q2;
    q1.push(root);
    while(!q1.empty() || !q2.empty())
    {
        
        BinaryTreeNode<int> *node;
        while(!q1.empty())
        {
          
                node = q1.top();
                q1.pop();
            result.push_back(node->data);
                
            if(node->left)
                    q2.push(node->left);
                if(node->right)
                    q2.push(node->right);
        }
            
           while(!q2.empty())
            {
                node = q2.top();
                q2.pop();
                result.push_back(node->data);
               if(node->right)
                    q1.push(node->right);
                if(node->left)
                    q1.push(node->left);
               
            }
             
    }
    return result;
}











